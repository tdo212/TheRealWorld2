Index: src/main/java/com/therealworld/fitschedule/controllers/EditGoalsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.therealworld.fitschedule.controllers;\n\nimport com.therealworld.fitschedule.model.SqliteDAO;\nimport javafx.beans.value.ChangeListener;\nimport javafx.beans.value.ObservableValue;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.scene.Node;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ComboBox;\nimport javafx.scene.control.TextField;\nimport javafx.stage.Stage;\n\npublic class EditGoalsController {\n\n    public ComboBox<String> goalTypeComboBox; // For selecting between 'Cardio', 'Gym', etc.\n    public ComboBox<String> durationTypeComboBox; // For selecting between 'Hours per week', 'Days per week'\n    public ComboBox<Integer> goalDurationComboBox; // For selecting 4, 5, 6, up to 12 weeks\n    public TextField targetSessionsField; // For entering target number of sessions or hours\n    @FXML\n    public TextField otherGoalTextField; // For entering custom goal type when 'Other' is selected\n\n    private SqliteDAO goalsDAO;\n    private GoalsController goalsController;  // Reference to GoalsController\n\n    // Inject the GoalsController\n    public void setGoalsController(GoalsController goalsController) {\n        this.goalsController = goalsController;\n    }\n\n    public void initialize() {\n        // Initialize ComboBoxes with options\n\n        // Clear any existing items first to prevent duplicates\n        goalTypeComboBox.getItems().clear();\n        durationTypeComboBox.getItems().clear();\n        goalDurationComboBox.getItems().clear();\n\n        // Add items to the goal type ComboBox\n        goalTypeComboBox.getItems().addAll(\"Cardio\", \"Gym\", \"Other\");\n\n        // Add items to the duration type ComboBox\n        durationTypeComboBox.getItems().addAll(\"Hours per week\", \"Days per week\");\n\n        // Add items to the goal duration ComboBox (for 4-12 weeks)\n        goalDurationComboBox.getItems().addAll(4, 5, 6, 7, 8, 9, 10, 11, 12);\n\n        // Create DAO instance\n        goalsDAO = new SqliteDAO();\n\n        // Add listener to the goalTypeComboBox to show/hide the otherGoalTextField\n        goalTypeComboBox.valueProperty().addListener(new ChangeListener<String>() {\n            @Override\n            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {\n                if (\"Other\".equals(newValue)) {\n                    otherGoalTextField.setVisible(true);\n                } else {\n                    otherGoalTextField.setVisible(false);\n                }\n            }\n        });\n\n        // Initially hide the otherGoalTextField\n        otherGoalTextField.setVisible(false);\n    }\n\n    // Handle saving the goal and then closing the window\n    public void onSaveClick(ActionEvent actionEvent) {\n        String goalType = goalTypeComboBox.getValue();\n        String durationType = durationTypeComboBox.getValue();\n        Integer goalDuration = goalDurationComboBox.getValue(); // This is an Integer\n        String targetSessions = targetSessionsField.getText();\n\n        if (goalType == null || durationType == null || goalDuration == null || targetSessions.isEmpty()) {\n            showAlert(\"Please fill out all the required fields!\", Alert.AlertType.ERROR);\n            return;\n        }\n\n        if (\"Other\".equals(goalType)) {\n            goalType = otherGoalTextField.getText();\n        }\n\n        try {\n            int targetValue = Integer.parseInt(targetSessions); // Ensure the target value is a number\n\n            // Check if target value is zero\n            if (targetValue == 0) {\n                showAlert(\"Target value cannot be zero!\", Alert.AlertType.ERROR);\n                return;\n            }\n\n            // Assuming userId is available, you should pass it from the logged-in user's session\n            int userId = 1; // Example user ID, replace with actual user ID\n\n            // Since we're adding a new goal, it's not completed, so set goalCompleted to 0 (false)\n            int goalCompleted = 0;\n\n            // Save the goal to the database, now including the goal_completed field\n            goalsDAO.addGoal(userId, goalType, goalDuration, durationType, \"Goal Description\", goalCompleted);\n\n            showAlert(\"Goal saved successfully!\", Alert.AlertType.INFORMATION);\n\n            // Notify the GoalsController to refresh the list of goals\n            if (goalsController != null) {\n                goalsController.refreshGoalsList();  // Refresh the goal list\n            }\n\n            // Close the current edit-goals-view window after saving\n            closeCurrentWindow(actionEvent);\n\n        } catch (NumberFormatException e) {\n            showAlert(\"Target value must be a number!\", Alert.AlertType.ERROR);\n        }\n    }\n\n    // Handle cancelling, simply close the current edit-goals-view window\n    public void onCancelClick(ActionEvent actionEvent) {\n        closeCurrentWindow(actionEvent);\n    }\n\n    // Helper method to close the current window\n    private void closeCurrentWindow(ActionEvent actionEvent) {\n        // Get the current stage (the window where the cancel/save button was clicked)\n        Stage currentStage = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();\n        currentStage.close();  // Close the current window\n    }\n\n    // Helper method to show alerts\n    void showAlert(String message, Alert.AlertType type) {\n        Alert alert = new Alert(type);\n        alert.setContentText(message);\n        alert.showAndWait();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/therealworld/fitschedule/controllers/EditGoalsController.java b/src/main/java/com/therealworld/fitschedule/controllers/EditGoalsController.java
--- a/src/main/java/com/therealworld/fitschedule/controllers/EditGoalsController.java	
+++ b/src/main/java/com/therealworld/fitschedule/controllers/EditGoalsController.java	
@@ -11,11 +11,23 @@
 import javafx.scene.control.ComboBox;
 import javafx.scene.control.TextField;
 import javafx.stage.Stage;
-
+/**
+ * The EditGoalsController handles the user interface for editing or adding goals.
+ * It allows users to select goal types, duration, and target sessions, and interact with the database
+ * to store these goals. It also allows users to cancel or save their inputs.
+ */
 public class EditGoalsController {
-
+    /**
+     * ComboBox for selecting the type of goal (e.g., 'Cardio', 'Gym', or 'Other').
+     */
     public ComboBox<String> goalTypeComboBox; // For selecting between 'Cardio', 'Gym', etc.
+    /**
+     * ComboBox for selecting the duration type (e.g., 'Hours per week', 'Days per week').
+     */
     public ComboBox<String> durationTypeComboBox; // For selecting between 'Hours per week', 'Days per week'
+    /**
+     * ComboBox for selecting the duration of the goal in weeks (ranging from 4 to 12 weeks).
+     */
     public ComboBox<Integer> goalDurationComboBox; // For selecting 4, 5, 6, up to 12 weeks
     public TextField targetSessionsField; // For entering target number of sessions or hours
     @FXML
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/shelved.patch	
@@ -0,0 +1,100 @@
+Index: src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.therealworld.fitschedule.controllers;\n\nimport com.therealworld.fitschedule.FitScheduleApp;\nimport com.therealworld.fitschedule.model.Goal;\nimport com.therealworld.fitschedule.model.SqliteDAO;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.chart.PieChart;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.scene.control.ProgressBar;\nimport javafx.stage.Modality;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\n\npublic class GoalsController {\n\n    @FXML\n    private ListView<Goal> contactsListView;\n    @FXML\n    private Label goalCountLabel; // Label to display goal count\n    @FXML\n    private Label goalCompletedLabel; // Label to display completed goals count\n    @FXML\n    private PieChart pieChart;\n    @FXML\n    private ProgressBar progressBar;\n    @FXML\n    private Label progressLabel;  // Label to display percentage\n    @FXML\n    private Label UserIDLabel;  // Label to display percentage\n    @FXML\n    private ListView<String> badgesListView;\n    @FXML\n    private Label LifetimeCompleted;  // Label to display percentage\n\n    private SqliteDAO databaseHelper = new SqliteDAO();\n    private int goalsCompleted = 0;\n    private int userId = 2342; // Replace with the actual logged-in user ID\n\n\n    public void initialize() {\n        refreshGoalsList(); // Initialize the list of goals\n        displayGoalCount();\n        displayPieChart();\n        updateProgressBar();\n        refreshBadgesList();\n        setStats();\n    }\n\n    // Method to refresh the list of goals and update the UI\n    public void refreshGoalsList() {\n        ObservableList<Goal> data = databaseHelper.getAllGoals(); // Ensure SqliteDAO returns ObservableList<Goal>\n\n        System.out.println(\"Number of items to display: \" + data.size());\n\n        // Set the items in the ListView\n        contactsListView.setItems(data);\n        // Customize how each Goal is displayed in the ListView\n        contactsListView.setCellFactory(param -> new ListCell<Goal>() {\n            @Override\n            protected void updateItem(Goal goal, boolean empty) {\n                super.updateItem(goal, empty);\n                if (empty || goal == null) {\n                    setText(null);\n                } else {\n                    // Format the display string to show all goal details\n                    String goalDetails = String.format(\n                            \"ID: %d, Type: %s, Duration: %d weeks, Period: %s, Description: %s, Completed: %s\",\n                            goal.getGoalId(),\n                            goal.getGoalType(),\n                            goal.getGoalDuration(),\n                            goal.getGoalPeriod(),\n                            goal.getGoalDescription(),\n                            goal.isGoalCompleted() ? \"Yes\" : \"No\" // Display if the goal is completed\n                    );\n                    setText(goalDetails);\n                }\n            }\n        });\n\n        displayGoalCount();\n        displayPieChart();\n        updateProgressBar();\n        updateGoalsCompleted();\n\n    }\n\n    public void displayGoalCount() {\n        int goalCount = databaseHelper.countGoals();\n        goalCountLabel.setText(\"Goals Remaining: \" + goalCount);\n    }\n    public void setStats() {\n        int totalGoalsCompleted = databaseHelper.getTotalGoalsCompleted(userId);\n        UserIDLabel.setText(\"User ID: \" + userId);\n        LifetimeCompleted.setText(\"Goals Completed (Lifetime): \"+  totalGoalsCompleted);\n    }\n\n    public void updateGoalsCompleted() {\n        int goalsCompleted = 0;\n        goalCompletedLabel.setText(\"Goals Completed (Session): \" + completedGoals);\n    }\n\n    public void checkBadges() {\n        int totalGoalsCompleted = databaseHelper.getTotalGoalsCompleted(userId);\n        if (totalGoalsCompleted == 2) {\n            databaseHelper.awardBadge(userId, \"2 Goals Completed\");\n        }\n        if (totalGoalsCompleted == 4) {\n            databaseHelper.awardBadge(userId, \"4 Goals Completed\");\n        }\n        if (totalGoalsCompleted == 8) {\n            databaseHelper.awardBadge(userId, \"8 Goals Completed\");\n        }\n        if (totalGoalsCompleted == 10) {\n            databaseHelper.awardBadge(userId, \"10 Goals Completed\");\n        }\n        if (totalGoalsCompleted == 20) {\n            databaseHelper.awardBadge(userId, \"20 Goals Completed\");\n        }\n    }\n\n    public void displayPieChart() {\n        int goalCount = databaseHelper.countGoals();\n        ObservableList<PieChart.Data> pieChartData = FXCollections.observableArrayList(\n                new PieChart.Data(\"Completed\", completedGoals),\n                new PieChart.Data(\"Incomplete\", goalCount)\n        );\n        pieChart.setData(pieChartData); // Update pie chart with new data\n    }\n\n    public void updateProgressBar() {\n        int goalCount = databaseHelper.countGoals(); // Fetch the total number of goals\n       int completedGoals = databaseHelper.getCompletedGoalsCount(); // Fetch the total number of completed goals\n\n        // Avoid division by zero\n        if (goalCount == 0) {\n            progressBar.setProgress(0);  // Set progress to 0 if no goals exist\n            progressLabel.setText(\"0%\");  // Display 0% progress\n            return;\n        }\n\n        // Calculate progress as a double value\n        double progressgoals = (double) completedGoals / goalCount;\n\n        // Set the progress bar based on the calculated value\n        progressBar.setProgress(progressgoals);\n\n        // Convert the progress value to a percentage and update the label\n        int progressPercentage = (int) (progressgoals * 100);\n        progressLabel.setText(progressPercentage + \"%\");\n    }\n\n\n    @FXML\n    public void onEditGoalsClick(ActionEvent event) {\n        try {\n            // Load the Edit Goals FXML\n            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/com/therealworld/fitschedule/edit-goals-view.fxml\"));\n            Parent root = fxmlLoader.load();\n\n            // Pass the GoalsController reference to the EditGoalsController\n            EditGoalsController editGoalsController = fxmlLoader.getController();\n            editGoalsController.setGoalsController(this); // Pass the current instance of GoalsController\n\n            // Create a new stage (window) for the Edit Goals UI\n            Stage stage = new Stage();\n            stage.setTitle(\"Edit Goals\");\n            stage.initModality(Modality.APPLICATION_MODAL); // Block interaction with other windows\n            stage.setScene(new Scene(root));\n            stage.showAndWait(); // Wait until the edit goals window is closed\n\n            // Refresh the goals list after the edit window is closed\n            refreshGoalsList();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    private int completedGoals = 0; // New stat for tracking goals completed\n\n    @FXML\n    public void onCompleteGoalsClick(ActionEvent event) {\n        Goal selectedGoal = contactsListView.getSelectionModel().getSelectedItem();\n\n        if (selectedGoal != null && !selectedGoal.isGoalCompleted()) {\n            contactsListView.getItems().remove(selectedGoal); // Remove the selected goal from the ListView\n            databaseHelper.updateGoalAsCompleted(selectedGoal.getGoalId());\n            databaseHelper.deleteGoalFromDatabase(selectedGoal.getGoalId()); // Delete from database\n            completedGoals++;\n            updateGoalsCompleted(); // Update goals completed count\n            updateProgressBar(); // Update progress bar\n            displayPieChart(); // Update the pie chart\n            displayGoalCount();\n            checkBadges();\n            refreshBadgesList();\n            databaseHelper.initializeTotalGoalsCompleted(userId);\n            databaseHelper.incrementTotalGoalsCompleted(userId);\n            setStats();\n        }\n    }\n\n    @FXML\n    public void onDeleteGoalsClick(ActionEvent event) {\n        Goal selectedGoal = contactsListView.getSelectionModel().getSelectedItem();\n\n        if (selectedGoal != null) {\n            databaseHelper.deleteGoalFromDatabase(selectedGoal.getGoalId()); // Delete from database\n\n            // Refresh the goal list after deletion\n            refreshGoalsList();\n        }\n    }\n    @FXML\n    protected void onLogoffButtonClick(ActionEvent event) throws IOException {\n        Stage stage = (Stage) ((javafx.scene.Node) event.getSource()).getScene().getWindow();\n        FXMLLoader fxmlLoader = new FXMLLoader(FitScheduleApp.class.getResource(\"login-view.fxml\"));\n        Scene scene = new Scene(fxmlLoader.load(), FitScheduleApp.WIDTH, FitScheduleApp.HEIGHT);\n        stage.setScene(scene);\n    }\n    public void refreshBadgesList() {\n        ObservableList<String> badges = databaseHelper.getUserBadges(userId);\n        badgesListView.setItems(badges);\n    }\n\n}\n
+===================================================================
+diff --git a/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java b/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java
+--- a/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java	
++++ b/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java	
+@@ -43,7 +43,7 @@
+ 
+     private SqliteDAO databaseHelper = new SqliteDAO();
+     private int goalsCompleted = 0;
+-    private int userId = 2342; // Replace with the actual logged-in user ID
++    private int userId = 43553; // Replace with the actual logged-in user ID - RANDOM ID AS A TEST, IT WORKS SO FAR
+ 
+ 
+     public void initialize() {
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"764ab08b-92db-428a-9811-fe61d0ba3206\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/FitScheduleDBConnection.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/FitScheduleDBConnection.db\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/FitScheduleApp.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/FitScheduleApp.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"Goals\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;Mrkane123&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/tdo212/TheRealWorld2.git&quot;,\n    &quot;accountId&quot;: &quot;dc01a137-d808-437f-b47a-01e32fd1b3ca&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2lYVgsjbUnwLqftbTJnAhvok5YT\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;Application.FitScheduleApp.executor&quot;: &quot;Run&quot;,\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\n    &quot;JUnit.databaseTest.executor&quot;: &quot;Run&quot;,\n    &quot;Maven.fitschedule [clean].executor&quot;: &quot;Run&quot;,\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;TestGoals&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/benpt/IdeaProjects/TheRealWorld2&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;DatabaseDriversLRU&quot;: [\n      &quot;sqlite&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\Ben\\IdeaProjects\\TheRealWorld2\\src\\main\\resources\\com\\therealworld\\fitschedule\" />\n      <recent name=\"C:\\Users\\Ben\\IdeaProjects\\TheRealWorld2\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\cullu\\IdeaProjects\\demos\\Scheduling\\src\\main\\java\\com\\therealworld\\fitschedule\\model\" />\n      <recent name=\"C:\\Users\\cullu\\IdeaProjects\\demos\\Scheduling\\src\\main\\resources\\com\\therealworld\\fitschedule\" />\n      <recent name=\"C:\\Users\\cullu\\IdeaProjects\\demos\\Scheduling\\src\\test\\java\" />\n      <recent name=\"C:\\Users\\benpt\\IdeaProjects\\TheRealWorld2\\src\\main\\resources\\com\\therealworld\\fitschedule\" />\n      <recent name=\"C:\\Users\\benpt\\IdeaProjects\\TheRealWorld2\\src\\main\\java\\com\\therealworld\\fitschedule\\images\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"com.therealworld.fitschedule.model\" />\n      <recent name=\"com.therealworld.fitschedule.controllers\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.FitScheduleApp\">\n    <configuration name=\"FitScheduleApp\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"corretto-21\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.therealworld.fitschedule.FitScheduleApp\" />\n      <module name=\"fitschedule\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.therealworld.fitschedule.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"databaseTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Scheduling\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"databaseTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"TheRealWorld2\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"TheRealWorld2\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.FitScheduleApp\" />\n      <item itemvalue=\"JUnit.databaseTest\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.databaseTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62\" />\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"764ab08b-92db-428a-9811-fe61d0ba3206\" name=\"Changes\" comment=\"\" />\n      <created>1725357111020</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1725357111020</updated>\n      <workItem from=\"1726888456174\" duration=\"28065000\" />\n      <workItem from=\"1728093128186\" duration=\"8191000\" />\n      <workItem from=\"1728116886005\" duration=\"288000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/com/therealworld/fitschedule/model/SqliteDAO.java</url>\n          <line>84</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	
++++ b/.idea/workspace.xml	
+@@ -8,7 +8,7 @@
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/FitScheduleDBConnection.db" beforeDir="false" afterPath="$PROJECT_DIR$/FitScheduleDBConnection.db" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/therealworld/fitschedule/controllers/GoalsController.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/FitScheduleApp.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/FitScheduleApp.class" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController$1.class" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/therealworld/fitschedule/controllers/GoalsController.class" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+@@ -62,37 +62,37 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+-    &quot;Application.FitScheduleApp.executor&quot;: &quot;Run&quot;,
+-    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
+-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+-    &quot;JUnit.databaseTest.executor&quot;: &quot;Run&quot;,
+-    &quot;Maven.fitschedule [clean].executor&quot;: &quot;Run&quot;,
+-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+-    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+-    &quot;git-widget-placeholder&quot;: &quot;TestGoals&quot;,
+-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;C:/Users/benpt/IdeaProjects/TheRealWorld2&quot;,
+-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "ASKED_ADD_EXTERNAL_FILES": "true",
++    "Application.FitScheduleApp.executor": "Run",
++    "Application.HelloApplication.executor": "Run",
++    "Downloaded.Files.Path.Enabled": "false",
++    "JUnit.databaseTest.executor": "Run",
++    "Maven.fitschedule [clean].executor": "Run",
++    "Repository.Attach.Annotations": "false",
++    "Repository.Attach.JavaDocs": "false",
++    "Repository.Attach.Sources": "false",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
++    "git-widget-placeholder": "master",
++    "kotlin-language-version-configured": "true",
++    "last_opened_file_path": "C:/Users/benpt/IdeaProjects/TheRealWorld2",
++    "node.js.detected.package.eslint": "true",
++    "node.js.selected.package.eslint": "(autodetect)",
++    "node.js.selected.package.tslint": "(autodetect)",
++    "nodejs_package_manager_path": "npm",
++    "project.structure.last.edited": "Project",
++    "project.structure.proportion": "0.15",
++    "project.structure.side.proportion": "0.2",
++    "vue.rearranger.settings.migration": "true"
+   },
+-  &quot;keyToStringList&quot;: {
+-    &quot;DatabaseDriversLRU&quot;: [
+-      &quot;sqlite&quot;
++  "keyToStringList": {
++    "DatabaseDriversLRU": [
++      "sqlite"
+     ]
+   }
+-}</component>
++}]]></component>
+   <component name="RecentsManager">
+     <key name="CopyFile.RECENT_KEYS">
+       <recent name="C:\Users\Ben\IdeaProjects\TheRealWorld2\src\main\resources\com\therealworld\fitschedule" />
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]1/FitScheduleDBConnection.db b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]1/FitScheduleDBConnection.db
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/FitScheduleDBConnection.db b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]/FitScheduleDBConnection.db
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_10_2024,_11_03_pm_[Changes]1/shelved.patch
new file mode 100644
